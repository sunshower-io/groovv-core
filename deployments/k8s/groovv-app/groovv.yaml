apiVersion: apps/v1
kind: Deployment
metadata:
  name: groovv-io
spec:
  replicas: 3
  selector:
    matchLabels:
      app: groovv-io
  template:
    metadata:
      labels:
        app: groovv-io
    spec:
      containers:
        - name: groovv-io
          image: us-docker.pkg.dev/groovv-cloud/groovv-containers/groovv.io:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080


---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: groovv-io-backend-config
spec:
  timeoutSec: 40
  sessionAffinity:
    affinityType: "CLIENT_IP"

---
apiVersion: v1
kind: Service
metadata:
  name: groovv-io-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config:
      '{"default": "groovv-io-backend-config"}'
spec:
  selector:
    app: groovv-io
  type: ClusterIP
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 80

---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: app-groovv-io-cert
spec:
  domains:
    - app.groovv.co
    - app.groovv.io
#    - app.groovv.cloud
#    - app.groovv.co
#    - app.groovv.net


---

apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: groovv-application-frontend-config
spec:
  redirectToHttps:
    enabled: true
---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: groovv-io-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/managed-certificates: app-groovv-io-cert
    kubernetes.io/ingress.global-static-ip-name: "groovv-io-ip"
    networking.gke.io/v1beta1.FrontendConfig: "groovv-application-frontend-config"
spec:
  defaultBackend:
    service:
      name: groovv-io-service
      port:
        number: 80
